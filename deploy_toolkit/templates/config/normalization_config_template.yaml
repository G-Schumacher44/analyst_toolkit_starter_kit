# ------------------------------------------------------------------------------
# 📄 Config File: run_normalization_config.yaml
# 🧩 Module: Normalization (M03)
# 📌 Purpose: Cleans and standardizes data using rule-based transformations.
# ------------------------------------------------------------------------------
# This module is designed to resolve data quality issues identified in validation.
# It performs column renaming, value mapping, fuzzy matching, and type coercion.
# ------------------------------------------------------------------------------

# 📥 Execution context
notebook: true
run_id: ""
logging: "auto"            # Options: 'on', 'off', or 'auto'

# 🔧 Normalization settings
normalization:
  run: true

  # Optionally define input_path if this is the first module in a run
  # input_path: "path/to/input.csv"

  rules:
    # ✏️ Rename columns
    rename_columns:
      'example': 'example'

    # 🧹 Standardize categorical text columns
    standardize_text_columns:
      - 'example'

    # 🧩 Explicit value mappings for cleanup
    value_mappings:
      example:
        'test': 'Test'

    # 🤖 Fuzzy string matching for typo correction
    fuzzy_matching:
      run: true
      settings:
        species:
          master_list: ["example"]
          score_cutoff: 80

    # 📅 Date parsing for timestamp fields
    parse_datetimes:
      example_date:
        format: '%Y-%m-%d'
        errors: 'coerce'

    # 🔬 Columns to preview in the report
    preview_columns:
      - 'example'

    # 🧪 Coerce data types explicitly
    coerce_dtypes:
      example: 'float64'

  # 📤 Output and display controls
  settings:
    show_inline: true
    export: true
    as_csv: false
    export_path: "exports/reports/normalization/normalization_report.xlsx"

    checkpoint:
      run: true
      checkpoint_path: "exports/joblib/{run_id}/{run_id}_m03_df_normalized.joblib"